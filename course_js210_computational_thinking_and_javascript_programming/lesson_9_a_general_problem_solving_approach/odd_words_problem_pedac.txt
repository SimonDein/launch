Description:
Consider a character set consisting of letters, a space, and a point. Words consist of one or more, but at most 20 letters. An input text consists of one or more words separated from each other by one or more spaces and terminated by 0 or more spaces followed by a point. Input should be read from, and including, the first letter of the first word, up to and including the terminating point. The output text is to be produced such that successive words are separated by a single space with the last word being terminated by a single point. Odd words are copied in reverse order while even words are merely echoed.

For example, the input string
  "whats the matter with kansas."

becomes
  "whats eht matter htiw kansas."


Understand The Problem:
Input:
  A string containing:
    Words: 1 - 20 letters
    Separated by: 1 - many spaces
    Terminated by: 0 - many spaces followed by a dot.

    Character set: Letters, space and dot.
    Any error handling?
      What if the input contains any character outside the character set?
      What if any word would be longer than 20 characters?

Output:
  A string where:
    Words are separated by a single space.
    The last word is terminated witha a single point.
    Words at odd index are reversed.
    Words at even index stays in place.


Examples / Test Cases:
'H.' => 'H.'
'Hello      .' => 'Hello.'
'Hello there.' => 'Hello ereht.'
'Hello         there   .' => 'Hello ereht.'
'abdredksleosldkehfil    hey yo.' => 'abdredksleosldkehfil yeh yo.'


Data Structure:
An array of all words in the sentence.
Map and join would be available to us and map the problem very well.

Algorithm:
Test for characters outside character set?
Extract any words in the input string to list
Traverse list and reverse words at odd index
join words together with a single space
append a single dot

Code:
Go nuts!